var esp=function(){var e={fetchAsyncSignals:function(e,n,o,r,i){console.log("Going to fetch signals for mode: "+e+" & source: "+n);var t="";switch(e){case 1:"undefined"!=typeof pbjs&&"function"==typeof pbjs.getUserIdsAsEids&&(t=pbjs.getUserIdsAsEids());break;case 2:"undefined"!=typeof owpbjs&&"function"==typeof owpbjs.getUserIdsAsEids&&(t=owpbjs.getUserIdsAsEids());break;case 3:case 4:"function"==typeof r&&(t=r(n));break;default:t=JSON.parse('{"source":"pubmatic","uids":[{"id":"hello-eids","atype":1}]}')}var c={};4==e?c[n]="1||"+s(t):t.forEach(function(e){c[e.source]=!0===o?"1||"+s(e):e.uids[0].id});var a=Promise.resolve(c[n]);return console.log("fetching Signal: "+c[n]),a}},s=function(e){return btoa(JSON.stringify(e))};return e.registerSignalSources=function(e,s,n,o,r,i){e.encryptedSignalProviders=e.encryptedSignalProviders||[],s.forEach(function(s){console.log("Registering signal provider: "+s);var t=s;!0===o&&(t=s+"/enc"),4===n&&(t=s+"/"+i+"/enc"),e.encryptedSignalProviders.push({id:t,collectorFunction:function(){return esp.fetchAsyncSignals(n,s,o,r,i)}})})},e}();
